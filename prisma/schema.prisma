// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  password   String
  createdAt  DateTime  @default(now())
  
  // 내가 만든 플레이리스트들
  playlists  Playlist[]
  
  // 내가 업로드한 트랙들 (내 라이브러리)
  tracks     Track[]  // <--- 이게 사실상 '내 라이브러리'
}

model Track {
  id         String    @id @default(uuid())
  fileName   String
  url        String
  createdAt  DateTime  @default(now())

  // 누가 업로드했는지 (즉, 그 유저의 라이브러리에 자동 포함)
  userId     String
  user       User      @relation(fields: [userId], references: [id])

  // 플레이리스트(Many-to-Many)에서 연결될 수 있음
  playlists  Playlist[]
}

model Playlist {
  id         String     @id @default(uuid())
  name       String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  // 플레이리스트 만든 사람 (Owner)
  userId     String
  user       User       @relation(fields: [userId], references: [id])

  // 어떤 트랙들이 들어있는지 (Many-to-Many)
  tracks     Track[]
}